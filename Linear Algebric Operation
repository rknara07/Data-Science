# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wtxMS6JAdo-r0jkG7usIf-wpGXn34kbg

# Linear Algebric Operation

1> determint

2> matrix multiplication 

3> addition of two array

4> inverse of matrix

5> eigen value

6> eigen vector
"""

import numpy as np

arr1=np.random.randint(0,10,9).reshape(3,3)
arr1

arr2=np.random.randint(0,10,9).reshape(3,3)
arr2

#addition of array

arr1+arr2

np.add(arr1,arr2)

#dot product

arr1.shape
arr2.shape

np.dot(arr1,arr2)

#determinant

np.linalg.det(arr1)

np.linalg.det(arr2)

#inverse of a matrix

np.linalg.inv(arr1)

np.linalg.inv(arr2)

#eigen Value , eigen vector

np.linalg.eig(arr1)

eval,eigvec=np.linalg.eig(arr1)
eigvec

eval

# inner product

arr1

arr2

np.inner(arr1,arr2)

# stack

arr3=np.stack((arr1,arr2))
arr3

arr3.shape

#hstack

arr4=np.hstack((arr1,arr2))
arr4

arr4.shape

#vstack

arr5=np.vstack((arr1,arr2))
arr5

arr5.shape

#expand_dimension

arr6= np.expand_dims(arr1,axis=0)
arr6

arr6.shape

arr7=np.expand_dims(arr1,axis=1)
arr7

arr7.shape

# squeeze

arr8=np.squeeze(arr6,axis=0)
arr8

arr8.shape

arr9=np.squeeze(arr7,axis=1)
arr9

arr9.shape

